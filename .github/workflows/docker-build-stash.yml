name: Docker build stash image

on:
  schedule:
    - cron: "0 * * * *"
  push:
    branches:
      - master

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Get latest commit hash
        id: get-latest-commit
        run: |
          echo "::set-output name=commit::$(git ls-remote git://github.com/stashed/stash.git | head -n1 | awk '{print $1;}')"
        shell: bash

      - uses: actions/cache@v2
        id: cache
        with:
          path: stash
          key: ${{ runner.os }}-v1-${{ steps.get-latest-commit.outputs.commit }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          platforms: arm64

      - name: Check Out Repo
        uses: actions/checkout@v2
          
      - name: Check Out Repo stashed/stash
        uses: actions/checkout@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: "stashed/stash"
          ref: 'v0.18.0'
          path: 'stash-git'

      - name: Set up Docker Buildx
        if: steps.cache.outputs.cache-hit != 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Replace rest by rclone and copy modified Dockerfile
        id: replace-copy
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sed 's/rest:/rclone:/' stash-git/vendor/stash.appscode.dev/apimachinery/pkg/restic/setup.go
          cp stash/Dockerfile.in stash-git/Dockerfile.in
        shell: bash

      - name: Publish docker image
        if: steps.cache.outputs.cache-hit != 'true'
        env:
          REGISTRY: quay.io/unixfox
          DOCKER_TOKEN: ${{ secrets.QUAY_PASSWORD }}
          USERNAME: ${{ secrets.QUAY_USERNAME }}
          APPSCODE_ENV: prod
          DOCKER_PLATFORMS: linux/amd64 linux/arm64
        run: |
          docker login quay.io --username ${USERNAME} --password ${DOCKER_TOKEN}
          cd stash-git && make release