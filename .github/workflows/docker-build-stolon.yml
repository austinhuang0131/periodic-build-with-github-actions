name: Docker build stolon image

on:
  schedule:
    - cron: "0 * * * *"
  push:
    branches:
      - master

jobs:

  build:

    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        postgres-version:
          - 14
          - 13
          - 12
          - 11
          - 10

    steps:
      - name: Get latest commit hash of github.com/docker-library/postgres
        id: get-latest-commit
        run: |
          echo "::set-output name=commit::$(git ls-remote https://github.com/docker-library/postgres.git | head -n1 | awk '{print $1;}')"
        shell: bash

      - name: Get latest tag of github.com/sorintlab/stolon
        id: get-latest-tag
        run: |
          echo "::set-output name=tag::$(git ls-remote --refs --tags https://github.com/sorintlab/stolon.git|cut --delimiter='/' --fields=3|sort --version-sort|tail --lines=1)"
        shell: bash

      - uses: actions/cache@v2
        id: cache
        with:
          path: stolon
          key: ${{ runner.os }}-v4-${{ steps.get-latest-commit.outputs.commit }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          platforms: all

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Check Out Repo sorintlab/stolon
        uses: actions/checkout@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: "sorintlab/stolon"
          ref: '${{ steps.get-latest-tag.outputs.tag }}'
          path: 'stolon-git'
          
      - name: Login to Quay.io
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Set up Docker Buildx
        if: steps.cache.outputs.cache-hit != 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Set up build timestamp
        if: steps.cache.outputs.cache-hit != 'true'
        run: echo "timestamp=$(date +%Y%m%d)" >> $GITHUB_ENV

      - name: Build and push docker image
        if: steps.cache.outputs.cache-hit != 'true'
        id: docker_build_new
        uses: docker/build-push-action@v2
        with:
          context: ./stolon-git
          file: ./stolon/Dockerfile
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          tags: quay.io/unixfox/stolon:latest-pg${{ matrix.postgres-version }}, quay.io/unixfox/stolon:${{ steps.get-latest-tag.outputs.tag }}-pg${{ matrix.postgres-version }}, quay.io/unixfox/stolon:${{ steps.get-latest-tag.outputs.tag }}-pg${{ matrix.postgres-version }}-build-${{ env.timestamp }}
          build-args: PGVERSION=${{ matrix.postgres-version }}
