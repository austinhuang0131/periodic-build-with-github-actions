name: Docker build ingress-nginx image

on:
  schedule:
    - cron: "0 * * * *"
  push:
    branches:
      - master

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Get latest tag
        id: get-latest-tag
        run: |
          echo "::set-output name=tag::$(git ls-remote --refs --tags https://github.com/kubernetes/ingress-nginx|grep controller-v|cut --delimiter='/' --fields=3|sort --version-sort|tail --lines=1| awk -F- '{print $NF}')"
        shell: bash

      - uses: actions/cache@v2
        id: cache
        with:
          path: ingress-nginx
          key: ${{ runner.os }}-v1-${{ steps.get-latest-tag.outputs.tag }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          platforms: all
          
      - name: Check Out Repo kubernetes/ingress-nginx
        uses: actions/checkout@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: "kubernetes/ingress-nginx"
          ref: 'controller-${{ steps.get-latest-tag.outputs.tag }}'
          path: 'ingress-nginx-git'

      - name: Check Out Repo haorenfsa/Nginx-limit-traffic-rate-module
        uses: actions/checkout@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: "haorenfsa/Nginx-limit-traffic-rate-module"
          ref: 'master'
          path: 'ingress-nginx-git/images/nginx/rootfs/Nginx-limit-traffic-rate-module'

      - name: Set up Docker Buildx
        if: steps.cache.outputs.cache-hit != 'true'
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Build docker image
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd ingress-nginx-git/images/nginx
          sed -i 's/WITH_FLAGS="/WITH_FLAGS="--add-module=\/Nginx-limit-traffic-rate-module /' rootfs/build.sh
          sed -i 's/^make/make -j2/g' rootfs/build.sh
          REGISTRY=quay.io/unixfox TAG=${{ steps.get-latest-tag.outputs.tag }} PLATFORMS=linux/amd64,linux/arm64 make build
        shell: bash

      - name: Push docker image
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          docker login quay.io --username ${USERNAME} --password ${DOCKER_TOKEN}
          cd ingress-nginx-git/images/nginx
          REGISTRY=quay.io/unixfox TAG=${{ steps.get-latest-tag.outputs.tag }} make push
        env:
          REGISTRY: quay.io/unixfox
          DOCKER_TOKEN: ${{ secrets.QUAY_PASSWORD }}
          USERNAME: ${{ secrets.QUAY_USERNAME }}
